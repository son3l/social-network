// @ts-ignoreimport logo from "./logo192.png";// @ts-ignoreimport classes from './Header.module.css';// @ts-ignoreimport {Login} from "./Login/Login.tsx";import {NavLink} from "react-router-dom";import * as React from "react";import {ProfileDataType} from "../../Utils/Types/Types";interface PropsType {    profile: ProfileDataType,    isAuth: boolean,    id: number,    LoginThunkCreator: (arg: any) => void}export const Header = (props: PropsType) => {    let ref = React.createRef()    let check = false;    if (props.isAuth && props.profile) {        return (            <div className={classes.head}>                <img src={logo}/>                <div className={classes.profileBox}>                    <div className={classes.profile}>                        <img onClick={() => {                            if (check) {                                // @ts-ignore                                ref.current.className = classes.dropdownDisable;                                check = false;                            } else {                                // @ts-ignore                                ref.current.className = classes.dropdownActive;                                check = true;                            }                        }} className={classes.image}                             src={props.profile.photos.small ? props.profile.photos.small : logo}/>                        <div>{props.profile.fullName}</div>                        {// @ts-ignore                            <div ref={ref} className={classes.dropdownDisable}>                                <div className={classes.items}><NavLink to={`/profile/${props.id}`}>                                    to profile                                </NavLink></div>                                <div className={classes.items} onClick={() => {                                    check = false;                                    // @ts-ignore                                    ref.current.className = classes.dropdownDisable;                                    props.LoginThunkCreator({type: false});                                }}>logout                                </div>                            </div>}                    </div>                </div>            </div>        );    }    return (        <div className={classes.head}>            <img src={logo}/>            <Login/>        </div>    )}